name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  quality-assurance:
    name: Quality Assurance
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcapstone-dev nasm

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: "qa"
        cache-all-crates: true
        prefix-key: "v1"
        save-if: ${{ github.ref == 'refs/heads/main' }}

    - name: Install cargo-binstall
      uses: cargo-bins/cargo-binstall@v1.15.6

    - name: Make QA script executable
      run: chmod +x scripts/qa.sh

    - name: Run quality assurance checks
      run: ./scripts/qa.sh

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcapstone-dev nasm

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: "coverage"
        cache-all-crates: true
        prefix-key: "v1"
        save-if: ${{ github.ref == 'refs/heads/main' }}

    - name: Install cargo-binstall
      uses: cargo-bins/cargo-binstall@v1.15.6

    - name: Install cargo-tarpaulin
      run: cargo binstall --no-confirm cargo-tarpaulin

    - name: Generate coverage report
      run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./cobertura.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true